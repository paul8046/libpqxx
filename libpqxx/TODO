ALERT
(*) Document all "mutable" operations as non-threadsafe
(*) Rename trigger
(*) test062 fails on binary strings with postgres 8.0.2 (RedHat, John Carpenter)
(*) test085 fails with postgres 8.0.2 (Fedora, John Carpenter)
(*) Some functionality breaks against postgres 7.1 (niejam@yahoo.com)
(*) Ignore column specs in tablestreams on older backends, if possible

Build & Configuration
(*) Rename libcompiler.h and compiler.h to avoid confusion
(*) Move PGHOST guessing logic from tools/preprelease to Makefile.am?

Connections
(*) Work around pre-7.3 handling of transaction variables?
(*) Make PQprotocolVersion() and/or PQserverVersion() available to public?
(*) Support scoped/unscoped non-superuser identity (outside transaction only)
(*) libpqxx-level trace output

Exceptions
(*) Strip newlines from PostgreSQL error messages in exceptions?
(*) Document exception guarantees (weak / strong / poorly defined / pure)

Large Objects
(*) Support lo_tell()
(*) Check for handling of nul characters

Results
(*) Convert to/from date/time values
(*) Splice out a reusable interface definition
(*) Real encoding support (PQmblen(), PQenv2encoding())
(*) Check for correct handling of nul characters
(*) Support PQftablecol()
(*) Support new PQcancel() and friends
(*) Conceive metadata model
(*) Allow direct mapping onto structs, using member ptr template args

Streams
(*) Permit column list test failures on pre-7.3 postgres backends
(*) Provide metadata information in tablestream
(*) Can we have a tablestream that looks more like a result?
(*) Create "inserter" class for column lists
(*) Allow single-level insertion with endt/endr manipulators
(*) Streambuffer class?

Tests
(*) Test broken connections
(*) Test tablereader and rows ending in empty fields

Thread-safety
(*) Remove thread-safety option; use strerror_r where available
(*) Guard against race bugs by marking "last modification" of objects

Transactions
(*) [pgsql 8.0] Support two-phase commit with separate transaction class(es)
(*) [pgsql 8.0] Support nested transactions and savepoints
(*) Undefine nontransaction "transaction" variables?
(*) User schema support for robusttransaction log table
(*) Support SET CONSTRAINTS (no-op for nontransaction).  Make DEFER scoped?
(*) Support constraints definition
(*) Pipelined operation for high-level classes: cursor, tablestream, ...

Util
(*) Report closing of non-open sessionfocus only during explicit close, not dtor
(*) Support floating-point infinities

